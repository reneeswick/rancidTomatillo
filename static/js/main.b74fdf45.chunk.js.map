{"version":3,"sources":["components/Card.js","components/CardContainer.js","components/MovieDetails.js","ApiCalls.js","components/Error.js","components/App.js","reportWebVitals.js","index.js"],"names":["Card","id","poster","title","to","className","src","alt","CardContainer","movieData","selectMovie","cardInfo","map","movie","poster_path","MovieDetails","returnHome","setState","hasError","state","this","props","fetch","then","response","status","console","log","ok","json","data","undefined","catch","error","handleError","release_date","backdrop_path","overview","Component","Error","App","movieIsSelected","selectedMovie","movies","results","path","component","exact","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","router","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b74fdf45.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/Card.css'\nimport { Link } from 'react-router-dom';\n\nconst Card = ({ id, poster, title }) => {\n  return (\n    < Link to={`/${id}`\n    } className='Card' >\n      <img src={poster}\n        alt={`Poster for the movie ${title}`}\n        className='moviePoster'\n        id={id}\n      />\n    </Link >\n  );\n\n}\n\nexport default Card;\n","import React from 'react'\nimport Card from './Card'\n// import MovieDetails from './MovieDetails'\nimport '../styles/CardContainer.css'\n\nconst CardContainer = ({ movieData, selectMovie }) => {\n  const cardInfo = movieData.map(movie => {\n    return (\n      <Card\n        id={movie.id}\n        poster={movie.poster_path}\n        title={movie.title}\n        key={movie.id}\n        selectMovie={selectMovie}\n      />\n    )\n  })\n\n  return (\n    <div className=\"CardContainer\">\n      {cardInfo}\n    </div>\n  );\n}\n\n\nexport default CardContainer;\n","import React, { Component } from 'react';\nimport '../styles/MovieDetails.css';\nimport { fetchSingleMovie } from '../ApiCalls.js';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movieData: {},\n      hasError: false\n    }\n  }\n\n  componentDidMount() {\n    // const { id, handleError } = this.props\n    fetchSingleMovie(this.props.id)\n      // .then(data => console.log('data in movieDetail after fetch:', data))\n      // .then(data => this.setState({\n      //   movieData: data.movie\n      // }))\n      .then(data => {\n        if (data === undefined) {\n          this.setState({\n            hasError: true\n          })\n          console.log(this.state.hasError)\n        } else {\n          this.setState({\n            movieData: data.movie\n          })\n        }\n      })\n      .catch(error => {\n        this.props.handleError();\n      })\n  }\n\n\n  returnHome = () => {\n    this.setState(\n      {\n        movieData: {},\n        hasError: false\n      }\n    )\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <Redirect to=\"/Error\" />\n    }\n    // return <Redirect to=\"/\" />\n    // console.log('this.state.movieData', this.state.movieData)\n    const { title, release_date, backdrop_path, overview } = this.state.movieData;\n    return (\n      <div>\n        <div className=\"movie-details-container\">\n          <h2 className=\"title\">{title} ({release_date})</h2>\n          <img className=\"movieBackDrop\" src={backdrop_path} alt={overview} />\n          <p className=\"overview\">{overview}</p>\n        </div>\n        <Link to=\"/\">\n          <button className=\"return-home-btn\">Home</button>\n        </Link>\n      </div>\n    )\n\n  }\n\n}\n\n\nexport default MovieDetails;\n","//original\n\n// export const fetchAllMovies = () => {\n//   return fetch(\"https://rancid-tomatillos.herokuapp.com/api/v2/movies\")\n//     .then(results => results.json())\n// };\n\n// export const fetchSingleMovie = (id) => {\n//   return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n//     .then(results => results.json())\n// };\n\n\n\n///////////////////////\n\n// export const fetchAllMovies = () => {\n//   return fetch(\"https://rancid-tomatillos.herokuapp.com/api/v2/movies\")\n//     .then(results => results.json())\n// };\n\n// export const fetchSingleMovie = (id) => {\n//   return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n//     .then(response => console.log('response in fetch', response))\n//   // .then(response => this.checkForError)\n// };\n\n// export const checkForError = (response) => {\n//   if (response.status >= 500) {\n//     console.log('fetch one')\n//     return \"Our servers are down.\"\n//   } else if (!response.ok) {\n//     console.log('fetch two')\n//     return \"Something went wrong.\"\n//   } else {\n//     console.log('fetch three')\n//     console.log('response here:', response)\n//     return response.json()\n//   }\n// };\n\n\n//////////////////\n// import Error from './components/Error';\n// import { Redirect } from 'react-router-dom';\n\n// export const fetchAllMovies = () => {\n//   return fetch(\"https://rancid-tomatillos.herokuapp.com/api/v2/movies\")\n//     .then(results => results.json())\n// };\n\n// export const fetchSingleMovie = (id) => {\n//   return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n//     .then(response => {\n//       if (response.status >= 500) {\n//         console.log('fetch one error\\n: response status >= 500')\n//         return \"Our servers are down. Please try again later.\"\n//       } else if (!response.ok) {\n//         console.log('fetch two error\\n: response not ok')\n//         return <Redirect to=\"/Error\" />\n//       } else {\n//         console.log('fetch three')\n//         console.log('response is good!\\n', response)\n//         return response.json()\n//       }\n//     })\n// };\n\n\n\n////////////\n//////////////////\nimport { Redirect } from 'react-router-dom';\n\nexport const fetchAllMovies = () => {\n  return fetch(\"https://rancid-tomatillos.herokuapp.com/api/v2/movies\")\n    .then(results => results.json())\n};\n\nexport const fetchSingleMovie = (id) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n    .then(response => {\n      if (response.status >= 500) {\n        console.log('fetch one error\\n: response status >= 500')\n      } else if (!response.ok) {\n        console.log('fetch two error\\n: response not ok')\n      } else {\n        console.log('fetch three: response is good!\\n', response)\n        return response.json()\n      }\n    })\n};\n\n","import React from 'react'\n\nconst Error = () => {\n  return (\n    <div>\n      <h1>Hello world!</h1>\n      <p>This means our error page is working.</p>\n    </div>\n  )\n}\n\nexport default Error;","import React, { Component } from 'react'\nimport CardContainer from './CardContainer.js';\nimport MovieDetails from './MovieDetails.js';\nimport { fetchAllMovies, fetchSingleMovie } from '../ApiCalls.js'\nimport '../styles/App.css';\nimport Error from './Error.js'\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      selectedMovie: {},\n      movieIsSelected: false,\n      hasError: false\n    }\n  }\n\n  componentDidMount() {\n    fetchAllMovies()\n      .then(data =>\n        this.setState({\n          movies: data.movies\n        })\n      )\n      .catch(error => {\n        console.log('Error getting all movies:', error)\n        this.setState({\n          hasError: true\n        })\n      })\n  }\n\n  handleError = () => {\n    // <Redirect to=\"/Error\" />\n    console.log('handle error in app');\n  }\n\n  // selectMovie = (id) => {\n  //   this.setState({ movieIsSelected: true })\n  //   fetchSingleMovie(id)\n  //     .then(data =>\n  //       this.setState({\n  //         selectedMovie: data.movie\n  //       })\n  //     )\n  //     .catch(error => {\n  //       console.log('Error in app fetch:', error)\n  //       this.setState({\n  //         hasError: true\n  //       })\n  //     })\n  // }\n\n  returnHome = () => {\n    this.setState({\n      movieIsSelected: false,\n      selectedMovie: {},\n      hasError: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header>\n          <h1 className=\"page-title\">Movie time</h1>\n        </header>\n        {this.state.hasError && <h2>There is an error with the server, please try again.</h2>}\n        <Switch>\n          <Route path=\"/Error\" component={Error} />\n          <Route exact path=\"/\" render={() =>\n            <CardContainer\n              movieData={this.state.movies}\n              selectedMovie={this.state.selectedMovie}\n              selectMovie={this.selectMovie}\n            />\n          }\n          />\n          <Route exact path=\"/:id\" render={({ match }) =>\n            <MovieDetails\n              id={match.params.id}\n              handleError={this.handleError}\n            />\n          }\n          />\n          {/* <Redirect to=\"/error\" /> */}\n          {/* <Route path=\"/error\" render={() => {\n            <Error />\n          }} />\n          <Route /> */}\n          {/* <Route path=\"/error\"> <Error /></Route> */}\n          {/* <Route component={Error} /> */}\n          {/* <Route path=\"*\" component={Error} /> */}\n\n          {/* <Route path=\"/*\" render={() => {\n            <Error />\n          }} /> */}\n        </Switch>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = <BrowserRouter> <App className=\"app\" /> </BrowserRouter>\n\nReactDOM.render(\n  <React.StrictMode>\n    {router}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}